// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: struct.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_struct_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_struct_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_struct_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_struct_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_struct_2eproto;
namespace proto {
class BigString;
class BigStringDefaultTypeInternal;
extern BigStringDefaultTypeInternal _BigString_default_instance_;
class BigVectorOfNumerics;
class BigVectorOfNumericsDefaultTypeInternal;
extern BigVectorOfNumericsDefaultTypeInternal _BigVectorOfNumerics_default_instance_;
class ComplicatedContainer;
class ComplicatedContainerDefaultTypeInternal;
extern ComplicatedContainerDefaultTypeInternal _ComplicatedContainer_default_instance_;
class ComplicatedContainer_ComplicatedItem;
class ComplicatedContainer_ComplicatedItemDefaultTypeInternal;
extern ComplicatedContainer_ComplicatedItemDefaultTypeInternal _ComplicatedContainer_ComplicatedItem_default_instance_;
class ComplicatedContainer_ComplicatedItem_InnerItem;
class ComplicatedContainer_ComplicatedItem_InnerItemDefaultTypeInternal;
extern ComplicatedContainer_ComplicatedItem_InnerItemDefaultTypeInternal _ComplicatedContainer_ComplicatedItem_InnerItem_default_instance_;
class GetBagInfoRsp;
class GetBagInfoRspDefaultTypeInternal;
extern GetBagInfoRspDefaultTypeInternal _GetBagInfoRsp_default_instance_;
class Item;
class ItemDefaultTypeInternal;
extern ItemDefaultTypeInternal _Item_default_instance_;
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> ::proto::BigString* Arena::CreateMaybeMessage<::proto::BigString>(Arena*);
template<> ::proto::BigVectorOfNumerics* Arena::CreateMaybeMessage<::proto::BigVectorOfNumerics>(Arena*);
template<> ::proto::ComplicatedContainer* Arena::CreateMaybeMessage<::proto::ComplicatedContainer>(Arena*);
template<> ::proto::ComplicatedContainer_ComplicatedItem* Arena::CreateMaybeMessage<::proto::ComplicatedContainer_ComplicatedItem>(Arena*);
template<> ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* Arena::CreateMaybeMessage<::proto::ComplicatedContainer_ComplicatedItem_InnerItem>(Arena*);
template<> ::proto::GetBagInfoRsp* Arena::CreateMaybeMessage<::proto::GetBagInfoRsp>(Arena*);
template<> ::proto::Item* Arena::CreateMaybeMessage<::proto::Item>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace proto {

// ===================================================================

class BigVectorOfNumerics PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.BigVectorOfNumerics) */ {
 public:
  inline BigVectorOfNumerics() : BigVectorOfNumerics(nullptr) {}
  virtual ~BigVectorOfNumerics();

  BigVectorOfNumerics(const BigVectorOfNumerics& from);
  BigVectorOfNumerics(BigVectorOfNumerics&& from) noexcept
    : BigVectorOfNumerics() {
    *this = ::std::move(from);
  }

  inline BigVectorOfNumerics& operator=(const BigVectorOfNumerics& from) {
    CopyFrom(from);
    return *this;
  }
  inline BigVectorOfNumerics& operator=(BigVectorOfNumerics&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BigVectorOfNumerics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BigVectorOfNumerics* internal_default_instance() {
    return reinterpret_cast<const BigVectorOfNumerics*>(
               &_BigVectorOfNumerics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BigVectorOfNumerics& a, BigVectorOfNumerics& b) {
    a.Swap(&b);
  }
  inline void Swap(BigVectorOfNumerics* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BigVectorOfNumerics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BigVectorOfNumerics* New() const final {
    return CreateMaybeMessage<BigVectorOfNumerics>(nullptr);
  }

  BigVectorOfNumerics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BigVectorOfNumerics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BigVectorOfNumerics& from);
  void MergeFrom(const BigVectorOfNumerics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BigVectorOfNumerics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.BigVectorOfNumerics";
  }
  protected:
  explicit BigVectorOfNumerics(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_struct_2eproto);
    return ::descriptor_table_struct_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDoubleListFieldNumber = 1,
    kIntListFieldNumber = 2,
  };
  // repeated double double_list = 1;
  int double_list_size() const;
  private:
  int _internal_double_list_size() const;
  public:
  void clear_double_list();
  private:
  double _internal_double_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_double_list() const;
  void _internal_add_double_list(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_double_list();
  public:
  double double_list(int index) const;
  void set_double_list(int index, double value);
  void add_double_list(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      double_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_double_list();

  // repeated int32 int_list = 2;
  int int_list_size() const;
  private:
  int _internal_int_list_size() const;
  public:
  void clear_int_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_int_list() const;
  void _internal_add_int_list(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_int_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 int_list(int index) const;
  void set_int_list(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_int_list(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      int_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_int_list();

  // @@protoc_insertion_point(class_scope:proto.BigVectorOfNumerics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > double_list_;
  mutable std::atomic<int> _double_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > int_list_;
  mutable std::atomic<int> _int_list_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_struct_2eproto;
};
// -------------------------------------------------------------------

class BigString PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.BigString) */ {
 public:
  inline BigString() : BigString(nullptr) {}
  virtual ~BigString();

  BigString(const BigString& from);
  BigString(BigString&& from) noexcept
    : BigString() {
    *this = ::std::move(from);
  }

  inline BigString& operator=(const BigString& from) {
    CopyFrom(from);
    return *this;
  }
  inline BigString& operator=(BigString&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BigString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BigString* internal_default_instance() {
    return reinterpret_cast<const BigString*>(
               &_BigString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BigString& a, BigString& b) {
    a.Swap(&b);
  }
  inline void Swap(BigString* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BigString* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BigString* New() const final {
    return CreateMaybeMessage<BigString>(nullptr);
  }

  BigString* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BigString>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BigString& from);
  void MergeFrom(const BigString& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BigString* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.BigString";
  }
  protected:
  explicit BigString(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_struct_2eproto);
    return ::descriptor_table_struct_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrFieldNumber = 1,
  };
  // bytes str = 1;
  void clear_str();
  const std::string& str() const;
  void set_str(const std::string& value);
  void set_str(std::string&& value);
  void set_str(const char* value);
  void set_str(const void* value, size_t size);
  std::string* mutable_str();
  std::string* release_str();
  void set_allocated_str(std::string* str);
  private:
  const std::string& _internal_str() const;
  void _internal_set_str(const std::string& value);
  std::string* _internal_mutable_str();
  public:

  // @@protoc_insertion_point(class_scope:proto.BigString)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr str_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_struct_2eproto;
};
// -------------------------------------------------------------------

class Item PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.Item) */ {
 public:
  inline Item() : Item(nullptr) {}
  virtual ~Item();

  Item(const Item& from);
  Item(Item&& from) noexcept
    : Item() {
    *this = ::std::move(from);
  }

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline Item& operator=(Item&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Item* internal_default_instance() {
    return reinterpret_cast<const Item*>(
               &_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Item& a, Item& b) {
    a.Swap(&b);
  }
  inline void Swap(Item* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Item* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Item* New() const final {
    return CreateMaybeMessage<Item>(nullptr);
  }

  Item* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Item>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Item* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.Item";
  }
  protected:
  explicit Item(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_struct_2eproto);
    return ::descriptor_table_struct_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUuidFieldNumber = 1,
    kCntFieldNumber = 2,
    kExtFieldNumber = 3,
  };
  // int32 uuid = 1;
  void clear_uuid();
  ::PROTOBUF_NAMESPACE_ID::int32 uuid() const;
  void set_uuid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_uuid() const;
  void _internal_set_uuid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cnt = 2;
  void clear_cnt();
  ::PROTOBUF_NAMESPACE_ID::int32 cnt() const;
  void set_cnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cnt() const;
  void _internal_set_cnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ext = 3;
  void clear_ext();
  ::PROTOBUF_NAMESPACE_ID::int32 ext() const;
  void set_ext(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ext() const;
  void _internal_set_ext(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:proto.Item)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 uuid_;
  ::PROTOBUF_NAMESPACE_ID::int32 cnt_;
  ::PROTOBUF_NAMESPACE_ID::int32 ext_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_struct_2eproto;
};
// -------------------------------------------------------------------

class GetBagInfoRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.GetBagInfoRsp) */ {
 public:
  inline GetBagInfoRsp() : GetBagInfoRsp(nullptr) {}
  virtual ~GetBagInfoRsp();

  GetBagInfoRsp(const GetBagInfoRsp& from);
  GetBagInfoRsp(GetBagInfoRsp&& from) noexcept
    : GetBagInfoRsp() {
    *this = ::std::move(from);
  }

  inline GetBagInfoRsp& operator=(const GetBagInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBagInfoRsp& operator=(GetBagInfoRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetBagInfoRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetBagInfoRsp* internal_default_instance() {
    return reinterpret_cast<const GetBagInfoRsp*>(
               &_GetBagInfoRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetBagInfoRsp& a, GetBagInfoRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(GetBagInfoRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBagInfoRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetBagInfoRsp* New() const final {
    return CreateMaybeMessage<GetBagInfoRsp>(nullptr);
  }

  GetBagInfoRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetBagInfoRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetBagInfoRsp& from);
  void MergeFrom(const GetBagInfoRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetBagInfoRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.GetBagInfoRsp";
  }
  protected:
  explicit GetBagInfoRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_struct_2eproto);
    return ::descriptor_table_struct_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemListFieldNumber = 2,
    kRetcodeFieldNumber = 1,
  };
  // repeated .proto.Item item_list = 2;
  int item_list_size() const;
  private:
  int _internal_item_list_size() const;
  public:
  void clear_item_list();
  ::proto::Item* mutable_item_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::Item >*
      mutable_item_list();
  private:
  const ::proto::Item& _internal_item_list(int index) const;
  ::proto::Item* _internal_add_item_list();
  public:
  const ::proto::Item& item_list(int index) const;
  ::proto::Item* add_item_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::Item >&
      item_list() const;

  // int32 retcode = 1;
  void clear_retcode();
  ::PROTOBUF_NAMESPACE_ID::int32 retcode() const;
  void set_retcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_retcode() const;
  void _internal_set_retcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:proto.GetBagInfoRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::Item > item_list_;
  ::PROTOBUF_NAMESPACE_ID::int32 retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_struct_2eproto;
};
// -------------------------------------------------------------------

class ComplicatedContainer_ComplicatedItem_InnerItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.ComplicatedContainer.ComplicatedItem.InnerItem) */ {
 public:
  inline ComplicatedContainer_ComplicatedItem_InnerItem() : ComplicatedContainer_ComplicatedItem_InnerItem(nullptr) {}
  virtual ~ComplicatedContainer_ComplicatedItem_InnerItem();

  ComplicatedContainer_ComplicatedItem_InnerItem(const ComplicatedContainer_ComplicatedItem_InnerItem& from);
  ComplicatedContainer_ComplicatedItem_InnerItem(ComplicatedContainer_ComplicatedItem_InnerItem&& from) noexcept
    : ComplicatedContainer_ComplicatedItem_InnerItem() {
    *this = ::std::move(from);
  }

  inline ComplicatedContainer_ComplicatedItem_InnerItem& operator=(const ComplicatedContainer_ComplicatedItem_InnerItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComplicatedContainer_ComplicatedItem_InnerItem& operator=(ComplicatedContainer_ComplicatedItem_InnerItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComplicatedContainer_ComplicatedItem_InnerItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComplicatedContainer_ComplicatedItem_InnerItem* internal_default_instance() {
    return reinterpret_cast<const ComplicatedContainer_ComplicatedItem_InnerItem*>(
               &_ComplicatedContainer_ComplicatedItem_InnerItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ComplicatedContainer_ComplicatedItem_InnerItem& a, ComplicatedContainer_ComplicatedItem_InnerItem& b) {
    a.Swap(&b);
  }
  inline void Swap(ComplicatedContainer_ComplicatedItem_InnerItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComplicatedContainer_ComplicatedItem_InnerItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ComplicatedContainer_ComplicatedItem_InnerItem* New() const final {
    return CreateMaybeMessage<ComplicatedContainer_ComplicatedItem_InnerItem>(nullptr);
  }

  ComplicatedContainer_ComplicatedItem_InnerItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComplicatedContainer_ComplicatedItem_InnerItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComplicatedContainer_ComplicatedItem_InnerItem& from);
  void MergeFrom(const ComplicatedContainer_ComplicatedItem_InnerItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComplicatedContainer_ComplicatedItem_InnerItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.ComplicatedContainer.ComplicatedItem.InnerItem";
  }
  protected:
  explicit ComplicatedContainer_ComplicatedItem_InnerItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_struct_2eproto);
    return ::descriptor_table_struct_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMem1FieldNumber = 1,
    kMem3FieldNumber = 3,
    kMem2FieldNumber = 2,
  };
  // double mem1 = 1;
  void clear_mem1();
  double mem1() const;
  void set_mem1(double value);
  private:
  double _internal_mem1() const;
  void _internal_set_mem1(double value);
  public:

  // uint64 mem3 = 3;
  void clear_mem3();
  ::PROTOBUF_NAMESPACE_ID::uint64 mem3() const;
  void set_mem3(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mem3() const;
  void _internal_set_mem3(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float mem2 = 2;
  void clear_mem2();
  float mem2() const;
  void set_mem2(float value);
  private:
  float _internal_mem2() const;
  void _internal_set_mem2(float value);
  public:

  // @@protoc_insertion_point(class_scope:proto.ComplicatedContainer.ComplicatedItem.InnerItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double mem1_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mem3_;
  float mem2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_struct_2eproto;
};
// -------------------------------------------------------------------

class ComplicatedContainer_ComplicatedItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.ComplicatedContainer.ComplicatedItem) */ {
 public:
  inline ComplicatedContainer_ComplicatedItem() : ComplicatedContainer_ComplicatedItem(nullptr) {}
  virtual ~ComplicatedContainer_ComplicatedItem();

  ComplicatedContainer_ComplicatedItem(const ComplicatedContainer_ComplicatedItem& from);
  ComplicatedContainer_ComplicatedItem(ComplicatedContainer_ComplicatedItem&& from) noexcept
    : ComplicatedContainer_ComplicatedItem() {
    *this = ::std::move(from);
  }

  inline ComplicatedContainer_ComplicatedItem& operator=(const ComplicatedContainer_ComplicatedItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComplicatedContainer_ComplicatedItem& operator=(ComplicatedContainer_ComplicatedItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComplicatedContainer_ComplicatedItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComplicatedContainer_ComplicatedItem* internal_default_instance() {
    return reinterpret_cast<const ComplicatedContainer_ComplicatedItem*>(
               &_ComplicatedContainer_ComplicatedItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ComplicatedContainer_ComplicatedItem& a, ComplicatedContainer_ComplicatedItem& b) {
    a.Swap(&b);
  }
  inline void Swap(ComplicatedContainer_ComplicatedItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComplicatedContainer_ComplicatedItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ComplicatedContainer_ComplicatedItem* New() const final {
    return CreateMaybeMessage<ComplicatedContainer_ComplicatedItem>(nullptr);
  }

  ComplicatedContainer_ComplicatedItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComplicatedContainer_ComplicatedItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComplicatedContainer_ComplicatedItem& from);
  void MergeFrom(const ComplicatedContainer_ComplicatedItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComplicatedContainer_ComplicatedItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.ComplicatedContainer.ComplicatedItem";
  }
  protected:
  explicit ComplicatedContainer_ComplicatedItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_struct_2eproto);
    return ::descriptor_table_struct_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ComplicatedContainer_ComplicatedItem_InnerItem InnerItem;

  // accessors -------------------------------------------------------

  enum : int {
    kMem3FieldNumber = 3,
    kMem4FieldNumber = 4,
    kMem2FieldNumber = 2,
    kMem1FieldNumber = 1,
  };
  // bytes mem3 = 3;
  void clear_mem3();
  const std::string& mem3() const;
  void set_mem3(const std::string& value);
  void set_mem3(std::string&& value);
  void set_mem3(const char* value);
  void set_mem3(const void* value, size_t size);
  std::string* mutable_mem3();
  std::string* release_mem3();
  void set_allocated_mem3(std::string* mem3);
  private:
  const std::string& _internal_mem3() const;
  void _internal_set_mem3(const std::string& value);
  std::string* _internal_mutable_mem3();
  public:

  // .proto.ComplicatedContainer.ComplicatedItem.InnerItem mem4 = 4;
  bool has_mem4() const;
  private:
  bool _internal_has_mem4() const;
  public:
  void clear_mem4();
  const ::proto::ComplicatedContainer_ComplicatedItem_InnerItem& mem4() const;
  ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* release_mem4();
  ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* mutable_mem4();
  void set_allocated_mem4(::proto::ComplicatedContainer_ComplicatedItem_InnerItem* mem4);
  private:
  const ::proto::ComplicatedContainer_ComplicatedItem_InnerItem& _internal_mem4() const;
  ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* _internal_mutable_mem4();
  public:
  void unsafe_arena_set_allocated_mem4(
      ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* mem4);
  ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* unsafe_arena_release_mem4();

  // double mem2 = 2;
  void clear_mem2();
  double mem2() const;
  void set_mem2(double value);
  private:
  double _internal_mem2() const;
  void _internal_set_mem2(double value);
  public:

  // int32 mem1 = 1;
  void clear_mem1();
  ::PROTOBUF_NAMESPACE_ID::int32 mem1() const;
  void set_mem1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mem1() const;
  void _internal_set_mem1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:proto.ComplicatedContainer.ComplicatedItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mem3_;
  ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* mem4_;
  double mem2_;
  ::PROTOBUF_NAMESPACE_ID::int32 mem1_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_struct_2eproto;
};
// -------------------------------------------------------------------

class ComplicatedContainer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.ComplicatedContainer) */ {
 public:
  inline ComplicatedContainer() : ComplicatedContainer(nullptr) {}
  virtual ~ComplicatedContainer();

  ComplicatedContainer(const ComplicatedContainer& from);
  ComplicatedContainer(ComplicatedContainer&& from) noexcept
    : ComplicatedContainer() {
    *this = ::std::move(from);
  }

  inline ComplicatedContainer& operator=(const ComplicatedContainer& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComplicatedContainer& operator=(ComplicatedContainer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComplicatedContainer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComplicatedContainer* internal_default_instance() {
    return reinterpret_cast<const ComplicatedContainer*>(
               &_ComplicatedContainer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ComplicatedContainer& a, ComplicatedContainer& b) {
    a.Swap(&b);
  }
  inline void Swap(ComplicatedContainer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComplicatedContainer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ComplicatedContainer* New() const final {
    return CreateMaybeMessage<ComplicatedContainer>(nullptr);
  }

  ComplicatedContainer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComplicatedContainer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComplicatedContainer& from);
  void MergeFrom(const ComplicatedContainer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComplicatedContainer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.ComplicatedContainer";
  }
  protected:
  explicit ComplicatedContainer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_struct_2eproto);
    return ::descriptor_table_struct_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ComplicatedContainer_ComplicatedItem ComplicatedItem;

  // accessors -------------------------------------------------------

  enum : int {
    kMemListFieldNumber = 1,
  };
  // repeated .proto.ComplicatedContainer.ComplicatedItem mem_list = 1;
  int mem_list_size() const;
  private:
  int _internal_mem_list_size() const;
  public:
  void clear_mem_list();
  ::proto::ComplicatedContainer_ComplicatedItem* mutable_mem_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::ComplicatedContainer_ComplicatedItem >*
      mutable_mem_list();
  private:
  const ::proto::ComplicatedContainer_ComplicatedItem& _internal_mem_list(int index) const;
  ::proto::ComplicatedContainer_ComplicatedItem* _internal_add_mem_list();
  public:
  const ::proto::ComplicatedContainer_ComplicatedItem& mem_list(int index) const;
  ::proto::ComplicatedContainer_ComplicatedItem* add_mem_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::ComplicatedContainer_ComplicatedItem >&
      mem_list() const;

  // @@protoc_insertion_point(class_scope:proto.ComplicatedContainer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::ComplicatedContainer_ComplicatedItem > mem_list_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_struct_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BigVectorOfNumerics

// repeated double double_list = 1;
inline int BigVectorOfNumerics::_internal_double_list_size() const {
  return double_list_.size();
}
inline int BigVectorOfNumerics::double_list_size() const {
  return _internal_double_list_size();
}
inline void BigVectorOfNumerics::clear_double_list() {
  double_list_.Clear();
}
inline double BigVectorOfNumerics::_internal_double_list(int index) const {
  return double_list_.Get(index);
}
inline double BigVectorOfNumerics::double_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BigVectorOfNumerics.double_list)
  return _internal_double_list(index);
}
inline void BigVectorOfNumerics::set_double_list(int index, double value) {
  double_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BigVectorOfNumerics.double_list)
}
inline void BigVectorOfNumerics::_internal_add_double_list(double value) {
  double_list_.Add(value);
}
inline void BigVectorOfNumerics::add_double_list(double value) {
  _internal_add_double_list(value);
  // @@protoc_insertion_point(field_add:proto.BigVectorOfNumerics.double_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
BigVectorOfNumerics::_internal_double_list() const {
  return double_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
BigVectorOfNumerics::double_list() const {
  // @@protoc_insertion_point(field_list:proto.BigVectorOfNumerics.double_list)
  return _internal_double_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
BigVectorOfNumerics::_internal_mutable_double_list() {
  return &double_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
BigVectorOfNumerics::mutable_double_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BigVectorOfNumerics.double_list)
  return _internal_mutable_double_list();
}

// repeated int32 int_list = 2;
inline int BigVectorOfNumerics::_internal_int_list_size() const {
  return int_list_.size();
}
inline int BigVectorOfNumerics::int_list_size() const {
  return _internal_int_list_size();
}
inline void BigVectorOfNumerics::clear_int_list() {
  int_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BigVectorOfNumerics::_internal_int_list(int index) const {
  return int_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BigVectorOfNumerics::int_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BigVectorOfNumerics.int_list)
  return _internal_int_list(index);
}
inline void BigVectorOfNumerics::set_int_list(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  int_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BigVectorOfNumerics.int_list)
}
inline void BigVectorOfNumerics::_internal_add_int_list(::PROTOBUF_NAMESPACE_ID::int32 value) {
  int_list_.Add(value);
}
inline void BigVectorOfNumerics::add_int_list(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_int_list(value);
  // @@protoc_insertion_point(field_add:proto.BigVectorOfNumerics.int_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
BigVectorOfNumerics::_internal_int_list() const {
  return int_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
BigVectorOfNumerics::int_list() const {
  // @@protoc_insertion_point(field_list:proto.BigVectorOfNumerics.int_list)
  return _internal_int_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
BigVectorOfNumerics::_internal_mutable_int_list() {
  return &int_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
BigVectorOfNumerics::mutable_int_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BigVectorOfNumerics.int_list)
  return _internal_mutable_int_list();
}

// -------------------------------------------------------------------

// BigString

// bytes str = 1;
inline void BigString::clear_str() {
  str_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& BigString::str() const {
  // @@protoc_insertion_point(field_get:proto.BigString.str)
  return _internal_str();
}
inline void BigString::set_str(const std::string& value) {
  _internal_set_str(value);
  // @@protoc_insertion_point(field_set:proto.BigString.str)
}
inline std::string* BigString::mutable_str() {
  // @@protoc_insertion_point(field_mutable:proto.BigString.str)
  return _internal_mutable_str();
}
inline const std::string& BigString::_internal_str() const {
  return str_.Get();
}
inline void BigString::_internal_set_str(const std::string& value) {
  
  str_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void BigString::set_str(std::string&& value) {
  
  str_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:proto.BigString.str)
}
inline void BigString::set_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  str_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:proto.BigString.str)
}
inline void BigString::set_str(const void* value,
    size_t size) {
  
  str_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:proto.BigString.str)
}
inline std::string* BigString::_internal_mutable_str() {
  
  return str_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* BigString::release_str() {
  // @@protoc_insertion_point(field_release:proto.BigString.str)
  return str_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void BigString::set_allocated_str(std::string* str) {
  if (str != nullptr) {
    
  } else {
    
  }
  str_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), str,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:proto.BigString.str)
}

// -------------------------------------------------------------------

// Item

// int32 uuid = 1;
inline void Item::clear_uuid() {
  uuid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Item::_internal_uuid() const {
  return uuid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Item::uuid() const {
  // @@protoc_insertion_point(field_get:proto.Item.uuid)
  return _internal_uuid();
}
inline void Item::_internal_set_uuid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  uuid_ = value;
}
inline void Item::set_uuid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_uuid(value);
  // @@protoc_insertion_point(field_set:proto.Item.uuid)
}

// int32 cnt = 2;
inline void Item::clear_cnt() {
  cnt_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Item::_internal_cnt() const {
  return cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Item::cnt() const {
  // @@protoc_insertion_point(field_get:proto.Item.cnt)
  return _internal_cnt();
}
inline void Item::_internal_set_cnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cnt_ = value;
}
inline void Item::set_cnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cnt(value);
  // @@protoc_insertion_point(field_set:proto.Item.cnt)
}

// int32 ext = 3;
inline void Item::clear_ext() {
  ext_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Item::_internal_ext() const {
  return ext_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Item::ext() const {
  // @@protoc_insertion_point(field_get:proto.Item.ext)
  return _internal_ext();
}
inline void Item::_internal_set_ext(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ext_ = value;
}
inline void Item::set_ext(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ext(value);
  // @@protoc_insertion_point(field_set:proto.Item.ext)
}

// -------------------------------------------------------------------

// GetBagInfoRsp

// int32 retcode = 1;
inline void GetBagInfoRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetBagInfoRsp::_internal_retcode() const {
  return retcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetBagInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetBagInfoRsp.retcode)
  return _internal_retcode();
}
inline void GetBagInfoRsp::_internal_set_retcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  retcode_ = value;
}
inline void GetBagInfoRsp::set_retcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:proto.GetBagInfoRsp.retcode)
}

// repeated .proto.Item item_list = 2;
inline int GetBagInfoRsp::_internal_item_list_size() const {
  return item_list_.size();
}
inline int GetBagInfoRsp::item_list_size() const {
  return _internal_item_list_size();
}
inline void GetBagInfoRsp::clear_item_list() {
  item_list_.Clear();
}
inline ::proto::Item* GetBagInfoRsp::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetBagInfoRsp.item_list)
  return item_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::Item >*
GetBagInfoRsp::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetBagInfoRsp.item_list)
  return &item_list_;
}
inline const ::proto::Item& GetBagInfoRsp::_internal_item_list(int index) const {
  return item_list_.Get(index);
}
inline const ::proto::Item& GetBagInfoRsp::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetBagInfoRsp.item_list)
  return _internal_item_list(index);
}
inline ::proto::Item* GetBagInfoRsp::_internal_add_item_list() {
  return item_list_.Add();
}
inline ::proto::Item* GetBagInfoRsp::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.GetBagInfoRsp.item_list)
  return _internal_add_item_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::Item >&
GetBagInfoRsp::item_list() const {
  // @@protoc_insertion_point(field_list:proto.GetBagInfoRsp.item_list)
  return item_list_;
}

// -------------------------------------------------------------------

// ComplicatedContainer_ComplicatedItem_InnerItem

// double mem1 = 1;
inline void ComplicatedContainer_ComplicatedItem_InnerItem::clear_mem1() {
  mem1_ = 0;
}
inline double ComplicatedContainer_ComplicatedItem_InnerItem::_internal_mem1() const {
  return mem1_;
}
inline double ComplicatedContainer_ComplicatedItem_InnerItem::mem1() const {
  // @@protoc_insertion_point(field_get:proto.ComplicatedContainer.ComplicatedItem.InnerItem.mem1)
  return _internal_mem1();
}
inline void ComplicatedContainer_ComplicatedItem_InnerItem::_internal_set_mem1(double value) {
  
  mem1_ = value;
}
inline void ComplicatedContainer_ComplicatedItem_InnerItem::set_mem1(double value) {
  _internal_set_mem1(value);
  // @@protoc_insertion_point(field_set:proto.ComplicatedContainer.ComplicatedItem.InnerItem.mem1)
}

// float mem2 = 2;
inline void ComplicatedContainer_ComplicatedItem_InnerItem::clear_mem2() {
  mem2_ = 0;
}
inline float ComplicatedContainer_ComplicatedItem_InnerItem::_internal_mem2() const {
  return mem2_;
}
inline float ComplicatedContainer_ComplicatedItem_InnerItem::mem2() const {
  // @@protoc_insertion_point(field_get:proto.ComplicatedContainer.ComplicatedItem.InnerItem.mem2)
  return _internal_mem2();
}
inline void ComplicatedContainer_ComplicatedItem_InnerItem::_internal_set_mem2(float value) {
  
  mem2_ = value;
}
inline void ComplicatedContainer_ComplicatedItem_InnerItem::set_mem2(float value) {
  _internal_set_mem2(value);
  // @@protoc_insertion_point(field_set:proto.ComplicatedContainer.ComplicatedItem.InnerItem.mem2)
}

// uint64 mem3 = 3;
inline void ComplicatedContainer_ComplicatedItem_InnerItem::clear_mem3() {
  mem3_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ComplicatedContainer_ComplicatedItem_InnerItem::_internal_mem3() const {
  return mem3_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ComplicatedContainer_ComplicatedItem_InnerItem::mem3() const {
  // @@protoc_insertion_point(field_get:proto.ComplicatedContainer.ComplicatedItem.InnerItem.mem3)
  return _internal_mem3();
}
inline void ComplicatedContainer_ComplicatedItem_InnerItem::_internal_set_mem3(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  mem3_ = value;
}
inline void ComplicatedContainer_ComplicatedItem_InnerItem::set_mem3(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mem3(value);
  // @@protoc_insertion_point(field_set:proto.ComplicatedContainer.ComplicatedItem.InnerItem.mem3)
}

// -------------------------------------------------------------------

// ComplicatedContainer_ComplicatedItem

// int32 mem1 = 1;
inline void ComplicatedContainer_ComplicatedItem::clear_mem1() {
  mem1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComplicatedContainer_ComplicatedItem::_internal_mem1() const {
  return mem1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ComplicatedContainer_ComplicatedItem::mem1() const {
  // @@protoc_insertion_point(field_get:proto.ComplicatedContainer.ComplicatedItem.mem1)
  return _internal_mem1();
}
inline void ComplicatedContainer_ComplicatedItem::_internal_set_mem1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mem1_ = value;
}
inline void ComplicatedContainer_ComplicatedItem::set_mem1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mem1(value);
  // @@protoc_insertion_point(field_set:proto.ComplicatedContainer.ComplicatedItem.mem1)
}

// double mem2 = 2;
inline void ComplicatedContainer_ComplicatedItem::clear_mem2() {
  mem2_ = 0;
}
inline double ComplicatedContainer_ComplicatedItem::_internal_mem2() const {
  return mem2_;
}
inline double ComplicatedContainer_ComplicatedItem::mem2() const {
  // @@protoc_insertion_point(field_get:proto.ComplicatedContainer.ComplicatedItem.mem2)
  return _internal_mem2();
}
inline void ComplicatedContainer_ComplicatedItem::_internal_set_mem2(double value) {
  
  mem2_ = value;
}
inline void ComplicatedContainer_ComplicatedItem::set_mem2(double value) {
  _internal_set_mem2(value);
  // @@protoc_insertion_point(field_set:proto.ComplicatedContainer.ComplicatedItem.mem2)
}

// bytes mem3 = 3;
inline void ComplicatedContainer_ComplicatedItem::clear_mem3() {
  mem3_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ComplicatedContainer_ComplicatedItem::mem3() const {
  // @@protoc_insertion_point(field_get:proto.ComplicatedContainer.ComplicatedItem.mem3)
  return _internal_mem3();
}
inline void ComplicatedContainer_ComplicatedItem::set_mem3(const std::string& value) {
  _internal_set_mem3(value);
  // @@protoc_insertion_point(field_set:proto.ComplicatedContainer.ComplicatedItem.mem3)
}
inline std::string* ComplicatedContainer_ComplicatedItem::mutable_mem3() {
  // @@protoc_insertion_point(field_mutable:proto.ComplicatedContainer.ComplicatedItem.mem3)
  return _internal_mutable_mem3();
}
inline const std::string& ComplicatedContainer_ComplicatedItem::_internal_mem3() const {
  return mem3_.Get();
}
inline void ComplicatedContainer_ComplicatedItem::_internal_set_mem3(const std::string& value) {
  
  mem3_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ComplicatedContainer_ComplicatedItem::set_mem3(std::string&& value) {
  
  mem3_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:proto.ComplicatedContainer.ComplicatedItem.mem3)
}
inline void ComplicatedContainer_ComplicatedItem::set_mem3(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  mem3_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:proto.ComplicatedContainer.ComplicatedItem.mem3)
}
inline void ComplicatedContainer_ComplicatedItem::set_mem3(const void* value,
    size_t size) {
  
  mem3_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:proto.ComplicatedContainer.ComplicatedItem.mem3)
}
inline std::string* ComplicatedContainer_ComplicatedItem::_internal_mutable_mem3() {
  
  return mem3_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ComplicatedContainer_ComplicatedItem::release_mem3() {
  // @@protoc_insertion_point(field_release:proto.ComplicatedContainer.ComplicatedItem.mem3)
  return mem3_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ComplicatedContainer_ComplicatedItem::set_allocated_mem3(std::string* mem3) {
  if (mem3 != nullptr) {
    
  } else {
    
  }
  mem3_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mem3,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:proto.ComplicatedContainer.ComplicatedItem.mem3)
}

// .proto.ComplicatedContainer.ComplicatedItem.InnerItem mem4 = 4;
inline bool ComplicatedContainer_ComplicatedItem::_internal_has_mem4() const {
  return this != internal_default_instance() && mem4_ != nullptr;
}
inline bool ComplicatedContainer_ComplicatedItem::has_mem4() const {
  return _internal_has_mem4();
}
inline void ComplicatedContainer_ComplicatedItem::clear_mem4() {
  if (GetArena() == nullptr && mem4_ != nullptr) {
    delete mem4_;
  }
  mem4_ = nullptr;
}
inline const ::proto::ComplicatedContainer_ComplicatedItem_InnerItem& ComplicatedContainer_ComplicatedItem::_internal_mem4() const {
  const ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* p = mem4_;
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::ComplicatedContainer_ComplicatedItem_InnerItem*>(
      &::proto::_ComplicatedContainer_ComplicatedItem_InnerItem_default_instance_);
}
inline const ::proto::ComplicatedContainer_ComplicatedItem_InnerItem& ComplicatedContainer_ComplicatedItem::mem4() const {
  // @@protoc_insertion_point(field_get:proto.ComplicatedContainer.ComplicatedItem.mem4)
  return _internal_mem4();
}
inline void ComplicatedContainer_ComplicatedItem::unsafe_arena_set_allocated_mem4(
    ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* mem4) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mem4_);
  }
  mem4_ = mem4;
  if (mem4) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:proto.ComplicatedContainer.ComplicatedItem.mem4)
}
inline ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* ComplicatedContainer_ComplicatedItem::release_mem4() {
  
  ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* temp = mem4_;
  mem4_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* ComplicatedContainer_ComplicatedItem::unsafe_arena_release_mem4() {
  // @@protoc_insertion_point(field_release:proto.ComplicatedContainer.ComplicatedItem.mem4)
  
  ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* temp = mem4_;
  mem4_ = nullptr;
  return temp;
}
inline ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* ComplicatedContainer_ComplicatedItem::_internal_mutable_mem4() {
  
  if (mem4_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::ComplicatedContainer_ComplicatedItem_InnerItem>(GetArena());
    mem4_ = p;
  }
  return mem4_;
}
inline ::proto::ComplicatedContainer_ComplicatedItem_InnerItem* ComplicatedContainer_ComplicatedItem::mutable_mem4() {
  // @@protoc_insertion_point(field_mutable:proto.ComplicatedContainer.ComplicatedItem.mem4)
  return _internal_mutable_mem4();
}
inline void ComplicatedContainer_ComplicatedItem::set_allocated_mem4(::proto::ComplicatedContainer_ComplicatedItem_InnerItem* mem4) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete mem4_;
  }
  if (mem4) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(mem4);
    if (message_arena != submessage_arena) {
      mem4 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mem4, submessage_arena);
    }
    
  } else {
    
  }
  mem4_ = mem4;
  // @@protoc_insertion_point(field_set_allocated:proto.ComplicatedContainer.ComplicatedItem.mem4)
}

// -------------------------------------------------------------------

// ComplicatedContainer

// repeated .proto.ComplicatedContainer.ComplicatedItem mem_list = 1;
inline int ComplicatedContainer::_internal_mem_list_size() const {
  return mem_list_.size();
}
inline int ComplicatedContainer::mem_list_size() const {
  return _internal_mem_list_size();
}
inline void ComplicatedContainer::clear_mem_list() {
  mem_list_.Clear();
}
inline ::proto::ComplicatedContainer_ComplicatedItem* ComplicatedContainer::mutable_mem_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ComplicatedContainer.mem_list)
  return mem_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::ComplicatedContainer_ComplicatedItem >*
ComplicatedContainer::mutable_mem_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ComplicatedContainer.mem_list)
  return &mem_list_;
}
inline const ::proto::ComplicatedContainer_ComplicatedItem& ComplicatedContainer::_internal_mem_list(int index) const {
  return mem_list_.Get(index);
}
inline const ::proto::ComplicatedContainer_ComplicatedItem& ComplicatedContainer::mem_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ComplicatedContainer.mem_list)
  return _internal_mem_list(index);
}
inline ::proto::ComplicatedContainer_ComplicatedItem* ComplicatedContainer::_internal_add_mem_list() {
  return mem_list_.Add();
}
inline ::proto::ComplicatedContainer_ComplicatedItem* ComplicatedContainer::add_mem_list() {
  // @@protoc_insertion_point(field_add:proto.ComplicatedContainer.mem_list)
  return _internal_add_mem_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::proto::ComplicatedContainer_ComplicatedItem >&
ComplicatedContainer::mem_list() const {
  // @@protoc_insertion_point(field_list:proto.ComplicatedContainer.mem_list)
  return mem_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_struct_2eproto
